substitutions:
  bme_address: "0x77"
  humidity_offset: "0"
  pressure_offset: "0"
  temperature_offset: "-6"

sensor:
  - platform: bme680
    temperature:
      name: "Temperature"
      filters:
        - offset: ${temperature_offset}
        - lambda: "return x + id(temperature_offset_ui).state;" 
    pressure:
      name: "Pressure"
      device_class: atmospheric_pressure
      filters:
        - offset: ${pressure_offset}
        - lambda: "return x + id(pressure_offset_ui).state;"
    gas_resistance:
      name: "Gas Resistance" # in Ω
      id: gas_resistance
    humidity:
      name: "Humidity"
      id: humidity
      filters:
        - offset: ${humidity_offset}
        - lambda: "return x + id(humidity_offset_ui).state;"
  - platform: template
    name: "IAQ"
    id: iaq
    icon: "mdi:air-filter"
    device_class: aqi
    lambda: |-
      const float humidity_baseline = 40.0;
      const float gas_baseline = 10000.0;
      float gas_score = (id(gas_resistance).state / gas_baseline) * 100.0;
      float humidity_score = (100.0 - abs(humidity_baseline - id(humidity).state));
      return (gas_score + humidity_score) / 2.0;
  - platform: template
    name: "CO2 Equivalent"
    device_class: carbon_dioxide
    unit_of_measurement: "ppm"
    lambda: |-
      float gas = id(gas_resistance).state;
      return (gas > 0) ? 400 + ((gas / 10000.0) * 1000) : 400;
  - platform: template
    name: "Breath VOC Equivalent"
    device_class: volatile_organic_compounds
    unit_of_measurement: "ppm"
    lambda: |-
      float gas = id(gas_resistance).state;
      return (gas > 0) ? (gas / 1000.0) : 0;

number:
  - platform: template
    name: "Temperature Offset"
    id: temperature_offset_ui
    unit_of_measurement: "°C"
    min_value: -10
    max_value: 10
    step: 0.1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:thermometer"
    entity_category: config

  - platform: template
    name: "Humidity Offset"
    id: humidity_offset_ui
    unit_of_measurement: "%"
    min_value: -50
    max_value: 50
    step: 0.1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:water-percent"
    entity_category: config

  - platform: template
    name: "Pressure Offset"
    id: pressure_offset_ui
    unit_of_measurement: "hPa"
    min_value: -500
    max_value: 500
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:gauge"
    entity_category: config

text_sensor:
  - platform: template
    name: "IAQ Classification"
    icon: "mdi:checkbox-marked-circle-outline"
    lambda: |-
      if ( int(id(iaq).state) <= 50) {
        return {"Excellent"};
      }
      else if (int(id(iaq).state) >= 51 && int(id(iaq).state) <= 100) {
        return {"Good"};
      }
      else if (int(id(iaq).state) >= 101 && int(id(iaq).state) <= 150) {
        return {"Lightly polluted"};
      }
      else if (int(id(iaq).state) >= 151 && int(id(iaq).state) <= 200) {
        return {"Moderately polluted"};
      }
      else if (int(id(iaq).state) >= 201 && int(id(iaq).state) <= 250) {
        return {"Heavily polluted"};
      }
      else if (int(id(iaq).state) >= 251 && int(id(iaq).state) <= 350) {
        return {"Severely polluted"};
      }
      else if (int(id(iaq).state) >= 351) {
        return {"Extremely polluted"};
      }
      else {
        return {"error"};
      }



      